{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Avishka\\\\React Native\\\\my-calculator\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Display from \"./Components/TextInput/Display\";\nimport Buttons from \"./Components/Buttons/Buttons\";\nimport ClearNequal from \"./Components/Buttons/ClearNequal\";\nimport Constants from 'expo-constants';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ExponentButtons from \"./Components/Buttons/ExponentButtons\";\nimport * as ScreenOrientation from 'expo-screen-orientation';\nexport default function App() {\n  var _useState = useState('0'),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevOperation = _useState4[0],\n      setPrevOperation = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      preValue = _useState6[0],\n      setPreValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      anyOperationTouched = _useState8[0],\n      setAnyOperationTouched = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isInt = _useState10[0],\n      setIsInt = _useState10[1];\n\n  var addDecimalPont = function addDecimalPont(number, operation, decimal) {\n    var newResult = \"\";\n\n    if (number.indexOf('.') != -1) {\n      if (number.indexOf('e') != -1) {\n        var decimalPoints = number.slice(number.indexOf('+') + 1);\n        newResult = number.slice(0, number.indexOf('e'));\n        var shiftingDecimals = decimalPoints - decimal * 2;\n        var newFloatPoint = newResult.indexOf('.') + shiftingDecimals;\n        newResult = newResult.slice(0, newResult.indexOf('.')) + newResult.slice(newResult.indexOf('.') + 1);\n        newResult = newResult.slice(0, newFloatPoint) + \".\" + newResult.slice(newFloatPoint);\n      } else {\n        newResult = number;\n      }\n    } else {\n      if (number.indexOf('e') != -1) {}\n\n      if (operation == \"+\" || operation == \"-\") {\n        if (decimal == 0) {\n          newResult = number;\n        } else {\n          newResult = number.slice(0, number.length - decimal) + \".\" + number.slice(number.length - decimal);\n        }\n      } else if (operation == \"*\" || operation == \"/\") {\n        if (decimal == 0) {\n          newResult = number;\n        } else {\n          newResult = number.slice(0, number.length - decimal * 2) + \".\" + number.slice(number.length - decimal * 2);\n        }\n      }\n\n      if (newResult.charAt(0) == '.') {\n        newResult = \"0\".concat(newResult);\n      }\n\n      if (newResult.includes('.')) {\n        while (true) {\n          if (newResult.charAt(newResult.length - 1) != '0') {\n            break;\n          } else {\n            newResult = newResult.slice(0, newResult.length - 1);\n          }\n        }\n      }\n    }\n\n    if (newResult.charAt(newResult.length - 1) == '.') {\n      newResult = newResult.slice(0, newResult.length - 1);\n    }\n\n    return newResult;\n  };\n\n  var removeDecimals = function removeDecimals(number, decimalPointsInNumber, decimal) {\n    for (var index = 0; index < decimal - decimalPointsInNumber; index++) {\n      number = number.concat(\"0\");\n    }\n\n    return number;\n  };\n\n  var getResult = function getResult(firstNumber, secondNumber, operation) {\n    var firstNumDecimals = 0;\n    var secondNumDecimals = 0;\n    var result = 0;\n\n    if (operation == 'expn') {\n      console.log(Math.pow(firstNumber, secondNumber));\n      result = 1;\n      var count = 0;\n\n      if (firstNumber.includes('.')) {\n        firstNumDecimals = firstNumber.length - firstNumber.indexOf('.') - 1;\n        firstNumber = firstNumber.replace('.', '');\n\n        while (count < secondNumber) {\n          result = result * firstNumber;\n          count++;\n        }\n\n        console.log(Math.pow(firstNumDecimals, secondNumber));\n        result = result.toString();\n        result = result.slice(0, result.length - firstNumDecimals * secondNumber) + '.' + result.slice(result.length - firstNumDecimals * secondNumber);\n        console.log(result.slice(0, result.length - firstNumDecimals * secondNumber));\n      } else {\n        while (count < secondNumber) {\n          result = result * firstNumber;\n          count++;\n        }\n\n        result = result.toString();\n      }\n\n      return Math.pow(firstNumber, secondNumber).toString();\n    } else {\n      if (firstNumber.indexOf('.') != -1) {\n        firstNumDecimals = firstNumber.length - firstNumber.indexOf('.') - 1;\n      }\n\n      if (secondNumber.indexOf('.') != -1) {\n        secondNumDecimals = secondNumber.length - secondNumber.indexOf('.') - 1;\n      }\n\n      var decimals = firstNumDecimals > secondNumDecimals ? firstNumDecimals : secondNumDecimals;\n\n      if (firstNumDecimals == decimals) {\n        firstNumber = firstNumber.replace('.', '');\n        secondNumber = removeDecimals(secondNumber.replace('.', ''), secondNumDecimals, decimals);\n      } else if (secondNumDecimals == decimals) {\n        secondNumber = secondNumber.replace('.', '');\n        firstNumber = removeDecimals(firstNumber.replace('.', ''), firstNumDecimals, decimals);\n      }\n\n      if (operation == \"+\" || operation == \"-\") {\n        if (operation == \"+\") {\n          result = parseInt(firstNumber) + parseFloat(secondNumber);\n        } else {\n          result = parseInt(firstNumber) - parseFloat(secondNumber);\n        }\n      } else if (operation == \"/\" || operation == \"*\") {\n        if (operation == \"/\") {\n          result = parseInt(firstNumber) / parseFloat(secondNumber);\n        } else {\n          result = parseInt(firstNumber) * parseFloat(secondNumber);\n        }\n      }\n\n      result = addDecimalPont(result.toString(), operation, decimals);\n      return result;\n    }\n  };\n\n  var vals = function vals(item) {\n    if (item == 'delete') {\n      if (value.length == 1) {\n        setValue('0');\n      } else {\n        var newData = value.slice(0, value.length - 1);\n        setValue(newData);\n      }\n    } else if (item == 'clear') {\n      setValue('0');\n      setPreValue('');\n      setPrevOperation('');\n      setAnyOperationTouched(false);\n    } else if (item == 'fatorial') {\n      if (!value.includes('.')) {\n        var result = value;\n        var number = value - 1;\n\n        while (true) {\n          if (number == 0) {\n            break;\n          }\n\n          result = result * number;\n          number--;\n        }\n\n        setValue(result.toString());\n      } else {\n        setValue(\"Error\");\n      }\n    } else if (item == 'exp') {\n      if (value.includes('.')) {\n        var decimals = value.length - value.indexOf('.') - 1;\n        var newValue = value.replace('.', '');\n\n        var _result = (newValue * newValue).toString();\n\n        var _newData = (value * value).toString();\n\n        if (decimals * 2 > 20) {\n          _result = Math.pow(value, 2).toFixed(20).toString();\n        } else {\n          _result = Math.pow(value, 2).toFixed(decimals * 2).toString();\n        }\n\n        setValue(_result);\n        console.log('value-----------', value);\n        console.log(\"fixed data------\", _result);\n        console.log(\"New data--------\", _newData);\n      } else {\n        var _newData2 = Math.pow(value, 2);\n\n        ;\n        setValue(_newData2.toString());\n      }\n    } else if (item == '10exp') {\n      setValue(Math.pow(10, value).toString());\n    } else if (item == '1/X') {\n      setValue((1 / value).toString());\n    } else if (item == 'expn') {\n      setPreValue(value);\n      setPrevOperation(item);\n      setValue('');\n    } else if (item == 'root') {\n      var _result2 = Math.pow(value, 1 / 2);\n\n      setValue(_result2.toString());\n    } else if (item == '+' || item == '-' || item == '/' || item == '*' || item == 'eql') {\n      setAnyOperationTouched(true);\n\n      if (prevOperation.length > 0) {\n        if (value.length > 0 && preValue.length > 0) {\n          var _newValue = getResult(preValue, value, prevOperation);\n\n          if (_newValue.includes('.')) {\n            if (_newValue.indexOf('.') >= 15) {\n              setValue('Out of range');\n              setPreValue('');\n              setPrevOperation('');\n              setAnyOperationTouched(false);\n            } else {\n              setValue(_newValue);\n              setPrevOperation(item);\n              setPreValue('');\n            }\n          } else if (_newValue.length >= 16) {\n            setValue('Out of range');\n            setPreValue('');\n            setPrevOperation('');\n            setAnyOperationTouched(false);\n          } else {\n            setValue(_newValue);\n            setPrevOperation(item);\n            setPreValue('');\n          }\n        } else {\n          setPrevOperation(item);\n        }\n      } else {\n        setPreValue(value);\n        setPrevOperation(item);\n        setValue('');\n      }\n    } else {\n      if (value.length == 0) {\n        setValue(item);\n\n        if (anyOperationTouched) {\n          setAnyOperationTouched(false);\n        }\n      } else if (value.length > 0) {\n        if (value.length == 1 && value == '0') {\n          if (item == '.') {\n            var _newData3 = value.concat(item);\n\n            setValue(_newData3);\n          } else {\n            setValue(item);\n          }\n        } else if (value.length == 1 && value != '0') {\n          if (anyOperationTouched == true) {\n            setPreValue(value);\n            setValue(item);\n            setAnyOperationTouched(false);\n          } else {\n            var _newData4 = value.concat(item);\n\n            setValue(_newData4);\n          }\n        } else {\n          if (prevOperation.length > 0) {\n            if (anyOperationTouched) {\n              setPreValue(value);\n              setValue(item);\n              setAnyOperationTouched(false);\n            } else {\n              var _newData5 = value.concat(item);\n\n              setValue(_newData5);\n            }\n          } else {\n            var _newData6 = value.concat(item);\n\n            setValue(_newData6);\n          }\n        }\n      }\n    }\n  };\n\n  var resetData = function resetData() {\n    setValue('0');\n    setPreValue('');\n    setPrevOperation('');\n    setAnyOperationTouched(false);\n  };\n\n  var exponent = function exponent(value) {\n    console.log(value);\n  };\n\n  console.log(Dimensions.get('screen'));\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }\n  }, React.createElement(Display, {\n    data: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }\n  }, React.createElement(Buttons, {\n    first: {\n      name: '7',\n      id: \"7\"\n    },\n    second: {\n      name: '8',\n      id: \"8\"\n    },\n    third: {\n      name: '9',\n      id: \"9\"\n    },\n    fourth: {\n      name: '÷',\n      id: '/'\n    },\n    onPress: vals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }\n  }), React.createElement(Buttons, {\n    first: {\n      name: '4',\n      id: \"4\"\n    },\n    second: {\n      name: '5',\n      id: \"5\"\n    },\n    third: {\n      name: '6',\n      id: \"6\"\n    },\n    fourth: {\n      name: '×',\n      id: '*'\n    },\n    onPress: vals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  }), React.createElement(Buttons, {\n    first: {\n      name: '1',\n      id: \"1\"\n    },\n    second: {\n      name: '2',\n      id: \"2\"\n    },\n    third: {\n      name: '3',\n      id: \"3\"\n    },\n    fourth: {\n      name: '+',\n      id: '+'\n    },\n    onPress: vals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }\n  }), React.createElement(Buttons, {\n    first: {\n      name: 'X!',\n      id: 'fatorial'\n    },\n    second: {\n      name: '0',\n      id: \"0\"\n    },\n    third: {\n      name: '.',\n      id: '.'\n    },\n    fourth: {\n      name: '-',\n      id: '-'\n    },\n    onPress: vals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }\n  }), React.createElement(ExponentButtons, {\n    onPress: vals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }\n  }), React.createElement(Buttons, {\n    first: {\n      name: '1/X',\n      id: '1/X'\n    },\n    second: {\n      name: 'CE',\n      id: \"delete\"\n    },\n    third: {\n      name: 'AC',\n      id: 'clear'\n    },\n    fourth: {\n      name: '=',\n      id: 'eql'\n    },\n    onPress: vals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: 'black',\n    paddingTop: Constants.statusBarHeight,\n    alignItems: \"center\"\n  },\n  container3: {\n    flexDirection: \"column\",\n    width: \"100%\",\n    borderRadius: 25,\n    margin: 4,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  container2: {\n    flex: 1,\n    backgroundColor: \"black\",\n    width: \"100%\"\n  },\n  text: {\n    fontWeight: \"bold\",\n    fontSize: 40\n  }\n});","map":{"version":3,"sources":["C:/Avishka/React Native/my-calculator/App.js"],"names":["StatusBar","React","useState","Display","Buttons","ClearNequal","Constants","ExponentButtons","ScreenOrientation","App","value","setValue","prevOperation","setPrevOperation","preValue","setPreValue","anyOperationTouched","setAnyOperationTouched","isInt","setIsInt","addDecimalPont","number","operation","decimal","newResult","indexOf","decimalPoints","slice","shiftingDecimals","newFloatPoint","length","charAt","concat","includes","removeDecimals","decimalPointsInNumber","index","getResult","firstNumber","secondNumber","firstNumDecimals","secondNumDecimals","result","console","log","Math","pow","count","replace","toString","decimals","parseInt","parseFloat","vals","item","newData","newValue","toFixed","resetData","exponent","Dimensions","get","styles","container","container2","name","id","StyleSheet","create","flex","flexDirection","backgroundColor","paddingTop","statusBarHeight","alignItems","container3","width","borderRadius","margin","justifyContent","text","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { Dimensions, StyleSheet, View } from 'react-native';\nimport Display from './Components/TextInput/Display';\nimport Buttons from './Components/Buttons/Buttons';\nimport ClearNequal from './Components/Buttons/ClearNequal';\nimport Constants from 'expo-constants';\nimport { TouchableOpacity } from 'react-native';\nimport ExponentButtons from './Components/Buttons/ExponentButtons';\nimport * as ScreenOrientation from 'expo-screen-orientation';\n\nexport default function App() {\n  const [value,setValue] = useState('0');\n  const [prevOperation,setPrevOperation]=useState('');\n  const [preValue,setPreValue] = useState('');\n  const [anyOperationTouched,setAnyOperationTouched] = useState(false);\n  const [isInt,setIsInt] = useState(false);\n\n\n  const addDecimalPont = (number, operation, decimal) =>{\n    let newResult = \"\";\n    //console.log(\"Add decimal\",number);\n    //console.log(\"Decimals-\",decimal);\n    if(number.indexOf('.')!=-1){\n      //newResult = number;\n      if(number.indexOf('e')!=-1){\n        const decimalPoints = number.slice(number.indexOf('+')+1);\n        //console.log(\"Decimal points--\",decimalPoints);\n        newResult=number.slice(0,number.indexOf('e'));\n        const shiftingDecimals = decimalPoints-(decimal*2);\n        //console.log(\"Shifting decimals--\",shiftingDecimals)\n        const newFloatPoint = (newResult.indexOf('.')+shiftingDecimals);\n        //console.log(\"New float point--\",newFloatPoint);\n        newResult=newResult.slice(0,newResult.indexOf('.'))+newResult.slice(newResult.indexOf('.')+1);\n        //console.log(\"NEW RESULT FIRST RESULT--\",newResult);\n        newResult=newResult.slice(0,newFloatPoint)+\".\"+newResult.slice(newFloatPoint);\n        //console.log(\"NEW RESULT SECOND RESULT--\",newResult);\n      }else{\n        newResult = number;\n      }\n    }else{\n      //let a = number.indexOf('e');\n      //console.log(\"ADD decimal else part\",number);\n      if(number.indexOf('e')!=-1){\n        //number=number.slice(0,number.indexOf('e'));\n        //console.log(\"Number is\",number);\n      }\n      if (operation == \"+\" || operation == \"-\") {\n        if(decimal==0){\n          newResult = number;\n        }else{\n          newResult = number.slice(0, (number.length - decimal)) + \".\" + number.slice((number.length - decimal));\n        }\n        \n      } else if (operation == \"*\" || operation == \"/\") {\n        if(decimal==0){\n          newResult = number;\n        }else{\n          newResult = number.slice(0, number.length - (decimal * 2)) + \".\" + number.slice(number.length - (decimal * 2));\n        }\n        \n      }if(newResult.charAt(0)=='.'){\n        newResult = \"0\".concat(newResult);\n      }\n      \n      if(newResult.includes('.')){\n        while(true){\n          if(newResult.charAt(newResult.length-1)!='0'){\n            break\n          }else{\n            newResult = newResult.slice(0,(newResult.length)-1);\n          }\n          \n          \n        }\n      }\n      \n      //console.log(newResult.charAt(newResult.length-1)); \n    }\n    //console.log(\"newResult----\",newResult);\n    if(newResult.charAt(newResult.length-1)=='.'){\n      //console.log(\"00000000000000000000000000000000000000\")\n      newResult = newResult.slice(0,(newResult.length)-1);\n    }\n    return newResult;\n  }\n\n  const removeDecimals = (number, decimalPointsInNumber, decimal) =>{\n    for (let index = 0; index < decimal - decimalPointsInNumber; index++) {\n      number = number.concat(\"0\");\n\n    }\n    return number;\n  }\n\n\n  const getResult = (firstNumber,secondNumber,operation) =>{\n    let firstNumDecimals = 0;\n    let secondNumDecimals = 0;\n\n    let result = 0;\n\n    if(operation=='expn'){\n      console.log(Math.pow(firstNumber,secondNumber));\n      result = 1;\n      let count = 0;\n      if(firstNumber.includes('.')){\n        firstNumDecimals = (firstNumber.length-firstNumber.indexOf('.'))-1;\n        firstNumber = firstNumber.replace('.','');\n        //let result = (newValue*newValue).toString();\n        //result = result.slice(0,result.length-(decimals*2))+'.'+result.slice(result.length-decimals*2);\n        //setValue(result);\n        while(count<secondNumber){\n          result = result*firstNumber;\n          count++;\n        }\n        console.log(firstNumDecimals**secondNumber);\n        result = result.toString();\n        result = result.slice(0,result.length-(firstNumDecimals*secondNumber))+'.'+result.slice(result.length-(firstNumDecimals*secondNumber));\n        console.log(result.slice(0,result.length-(firstNumDecimals*secondNumber)));\n\n\n      }else{\n        while(count<secondNumber){\n          result = result*firstNumber;\n          count++;\n        }\n        result = result.toString();\n      }\n      return (Math.pow(firstNumber,secondNumber)).toString();\n      \n    }else{\n\n      if (firstNumber.indexOf('.') != -1) {\n        firstNumDecimals = (firstNumber.length - firstNumber.indexOf('.')) - 1;\n      }\n      if (secondNumber.indexOf('.') != -1) {\n          secondNumDecimals = (secondNumber.length - secondNumber.indexOf('.')) - 1;\n      }\n      const decimals = firstNumDecimals > secondNumDecimals ? firstNumDecimals : secondNumDecimals;\n      if (firstNumDecimals == decimals) {\n          firstNumber = firstNumber.replace('.', '');\n          secondNumber = removeDecimals(secondNumber.replace('.', ''), secondNumDecimals, decimals);\n      } else if (secondNumDecimals == decimals) {\n          secondNumber = secondNumber.replace('.', '');\n          firstNumber = removeDecimals(firstNumber.replace('.', ''), firstNumDecimals, decimals);\n      }\n      //console.log(\"First number--\",firstNumber,\"  Second number--\",secondNumber);\n      if (operation == \"+\" || operation == \"-\") {\n          if (operation == \"+\") {\n              result = parseInt(firstNumber) + parseFloat(secondNumber);\n          } else {\n              result = parseInt(firstNumber) - parseFloat(secondNumber);\n          }\n      } else if (operation == \"/\" || operation == \"*\") {\n          if (operation == \"/\") {\n              result = parseInt(firstNumber) / parseFloat(secondNumber);\n          } else {\n              result = parseInt(firstNumber) * parseFloat(secondNumber);\n\n          }\n\n      }\n      //console.log(\"Result-----\",result);\n      // console.log(result);\n      //console.log(decimals);\n      result =  addDecimalPont(result.toString(), operation, decimals);\n      //console.log(result)\n      //console.log('\\n');\n      return result;\n      }\n\n\n    \n  }\n\n\n  const vals = (item) =>{\n    if(item=='delete'){\n      if(value.length==1){\n        setValue('0');\n      }else{\n        const newData = value.slice(0,value.length-1);\n        setValue(newData);\n      }\n    }else if(item=='clear'){\n      setValue('0');\n      setPreValue('');\n      setPrevOperation('');\n      setAnyOperationTouched(false);\n    }else if(item=='fatorial'){\n      if(!(value.includes('.'))){\n        let result = value;\n        let number = value-1;\n        while(true){\n          if(number==0){\n            break;\n          }\n          result = result*number;\n          number--;\n        }\n        setValue(result.toString());\n      }else{\n        setValue(\"Error\");\n      }\n      \n    }else if(item=='exp'){\n      if(value.includes('.')){\n        const decimals = (value.length-value.indexOf('.'))-1;\n        const newValue = value.replace('.','');\n        let result = (newValue*newValue).toString();\n        let newData = ((value*value).toString());\n        if(decimals*2>20){\n          result = (Math.pow(value,2)).toFixed(20).toString();\n        } else{\n          result = (Math.pow(value,2)).toFixed(decimals*2).toString();\n        }\n        \n        setValue(result);\n          //result = (result.slice(0,result.length-(decimals*2))+'.'+result.slice(result.length-decimals*2)).toString();\n        console.log('value-----------',value);\n        console.log(\"fixed data------\",result);\n        console.log(\"New data--------\",newData);\n        //console.log('Pre result',(result.replace('.','')).toString());\n        //console.log('not int---',result.replace('e','').replace('.','').replace('+',''));\n        //console.log(\"Result----\",parseInt(result.replace('e','').replace('.','').replace('+','')));\n        //console.log(\"Result2---\",parseInt(newData.replace('.','')));\n        //console.log('actrslt---',result.slice(0,result.length-(decimals*2))+'.'+result.slice(result.length-decimals*2))\n        \n\n      }else{\n        const newData = Math.pow(value,2);;\n        setValue(newData.toString());\n      }\n    }else if(item=='10exp'){\n      setValue(Math.pow(10,value).toString())\n\n    }else if(item=='1/X'){\n      setValue((1/value).toString());\n    }else if(item=='expn'){\n      setPreValue(value);\n      setPrevOperation(item);\n      setValue('');\n    }else if(item=='root'){\n      const result = Math.pow(value,1/2);\n      setValue(result.toString());\n\n    }else if(item=='+' || item=='-' || item=='/' || item=='*' || item=='eql'){\n     // console.log(\"Item--\",item);\n     // console.log(\"Begining the function\")\n     // console.log(\"Value(\",value,\")    PrevValue(\",preValue,\")  OP(\",prevOperation,\")\");\n     // console.log('\\n','\\n');\n      setAnyOperationTouched(true);\n      if(prevOperation.length>0){\n        if(value.length>0 && preValue.length>0){\n          \n          let newValue = getResult(preValue,value,prevOperation);\n          //console.log(\"=======================================\",newValue);\n          //console.log(\"Value(\",value,\")    PrevValue(\",preValue,\")\");\n          if(newValue.includes('.')){\n            if(newValue.indexOf('.')>=15){\n              setValue('Out of range');\n              setPreValue('');\n              setPrevOperation('');\n              setAnyOperationTouched(false);\n            }else{\n              setValue(newValue);\n              setPrevOperation(item);\n              setPreValue('');\n            }\n          }else if(newValue.length>=16){\n            setValue('Out of range');\n            setPreValue('');\n            setPrevOperation('');\n            setAnyOperationTouched(false);\n          }else{\n            setValue(newValue);\n            setPrevOperation(item);\n            setPreValue('');\n          }\n          \n        }else{\n          setPrevOperation(item);\n        }\n        //console.log(\"Hello\");\n        //console.log(\"Value(\",value,\")    PrevValue(\",preValue,\")  OP(\",prevOperation,\")\");\n        \n        /*if(prevOperation=='+'){\n          let newValue = getResult(preValue,value,item);\n          setValue(newValue.toString());\n          setPrevOperation(item);\n          setPreValue('');\n        }*/\n      }else{\n        setPreValue(value);\n        setPrevOperation(item);\n        setValue('');\n      }\n    } \n    else{\n      if(value.length==0){\n        //console.log(\"value length is 0\");\n        //if nothing displays,display current input\n        setValue(item);\n        if(anyOperationTouched){\n          setAnyOperationTouched(false);\n        }\n      }else if(value.length>0){\n        //console.log(\"Inside value.length>0\")\n        //console.log(\"Value(\",value,\")    PrevValue(\",preValue,\")  OP(\",prevOperation,\")\");\n        //console.log('\\n','\\n');\n        //console.log(\"value lenght is > 0\");\n        if(value.length==1 && value=='0'){\n          if(item=='.'){\n            //if displayed number equals 0 and the user input equals to '.' \n            const newData = value.concat(item);\n            setValue(newData);\n          }else{\n            //if displayed number equals 0 then nothing changed\n            setValue(item);\n          }\n          \n        }else if(value.length==1 && value!='0'){\n\n          if(anyOperationTouched==true){\n  \n            setPreValue(value);\n            setValue(item);\n            setAnyOperationTouched(false);\n          }else{\n            const newData = value.concat(item);\n            setValue(newData);\n          }\n          \n\n        }\n        \n        \n        else{\n          if(prevOperation.length>0){\n            if(anyOperationTouched){\n              setPreValue(value);\n              setValue(item);\n              setAnyOperationTouched(false);\n            }else{\n              const newData = value.concat(item);\n              setValue(newData);\n            }\n            \n          }else{\n            const newData = value.concat(item);\n            setValue(newData);\n          }\n          \n        }\n        \n    }\n    \n    }\n    \n    \n    \n    \n  }\n  const resetData = () =>{\n    setValue('0');\n    setPreValue('');\n    setPrevOperation('');\n    setAnyOperationTouched(false);\n  }\n\n  const exponent =(value) =>{\n    console.log(value);\n  }\n  //console.log(\"Result=====\",value);\n  //console.log(\"OUTSIDE THE FUNCTION\")\n  //console.log(\"Value(\",value,\")    PrevValue(\",preValue,\")  OP(\",prevOperation,\")\");\n  //console.log('\\n','\\n');\n  console.log(Dimensions.get('screen'));\n  \n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"light\" />\n      <View>\n        <Display data={value}/>\n      </View>\n      <View style={styles.container2}>\n        \n        <Buttons first={{name:'7',id:\"7\"}} second={{name:'8',id:\"8\"}} third={{name:'9',id:\"9\"}} fourth={{name:'÷',id:'/'}} onPress={vals}/>\n        <Buttons first={{name:'4',id:\"4\"}} second={{name:'5',id:\"5\"}} third={{name:'6',id:\"6\"}} fourth={{name:'×',id:'*'}} onPress={vals}/>\n        <Buttons first={{name:'1',id:\"1\"}} second={{name:'2',id:\"2\"}} third={{name:'3',id:\"3\"}} fourth={{name:'+',id:'+'}} onPress={vals}/>\n        <Buttons first={{name:'X!',id:'fatorial'}} second={{name:'0',id:\"0\"}} third={{name:'.',id:'.'}} fourth={{name:'-',id:'-'}} onPress={vals}/>\n        <ExponentButtons onPress={vals} />\n        <Buttons first={{name:'1/X',id:'1/X'}} second={{name:'CE',id:\"delete\"}} third={{name:'AC',id:'clear'}} fourth={{name:'=',id:'eql'}} onPress={vals}/>\n      </View>\n      {/*<View style={styles.container3}>\n        <ClearNequal name=\"=\" id=\"=\" onPress={vals} />\n      </View>\n      <View style={styles.container3}>\n        <ClearNequal name=\"Clear\" id=\"clear\" onPress={resetData}  />\n      </View>*/}\n      \n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection:\"column\",\n    backgroundColor: 'black',\n    paddingTop:Constants.statusBarHeight,\n    alignItems:\"center\"\n    \n  },\n  container3:{\n    flexDirection:\"column\",\n    width:\"100%\",\n    borderRadius:25,\n    margin:4,\n\n    alignItems:\"center\",\n    justifyContent:\"center\",\n  },\n  container2:{\n    flex:1,\n    backgroundColor:\"black\",\n    width:\"100%\",\n \n  },\n  text:{\n    fontWeight:\"bold\",\n    fontSize:40\n  }\n})\n"]},"metadata":{},"sourceType":"module"}