{"ast":null,"code":"var _jsxFileName = \"C:\\\\Avishka\\\\JAVA\\\\React-Native-Test\\\\my-calculator\\\\Components\\\\TextInput\\\\Display.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\n\nfunction Display(_ref) {\n  var data = _ref.data;\n  var Text = data;\n  var textArray = [];\n  var newTextArray = [];\n\n  if (Text.length >= 4 && Text != 'Out of range') {\n    if (Text.includes('.')) {\n      if (Text.indexOf('.') > 3) {\n        var floatIndex = Text.indexOf('.');\n        Text = Text.slice(0, floatIndex - 3) + \",\" + Text.slice(floatIndex - 3);\n      }\n    } else {\n      textArray.push(Text.slice(-3));\n      var lastIndex = Text.length - 3;\n      var firstIndex = lastIndex - 3;\n\n      while (true) {\n        if (firstIndex <= 0) {\n          textArray.push(Text.slice(0, lastIndex));\n          break;\n        }\n\n        textArray.push(Text.slice(firstIndex, lastIndex));\n        lastIndex = firstIndex;\n        firstIndex = lastIndex - 3;\n      }\n    }\n\n    var arrayIndex = textArray.length - 1;\n\n    while (true) {\n      newTextArray.push(textArray[arrayIndex]);\n\n      if (arrayIndex == 0) {\n        break;\n      }\n\n      arrayIndex -= 1;\n    }\n\n    arrayIndex = 0;\n    Text = '';\n\n    while (true) {\n      if (arrayIndex == newTextArray.length) {\n        break;\n      }\n\n      var concatString = newTextArray[arrayIndex] + \",\";\n      Text += concatString;\n      arrayIndex += 1;\n    }\n\n    Text = Text.slice(0, Text.length - 1);\n    console.log(Text);\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    textAlign: \"right\",\n    style: {\n      color: \"white\",\n      width: Dimensions.get('screen').width,\n      fontSize: Text.length > 15 ? 30 : 40\n    },\n    showSoftInputOnFocus: false,\n    editable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, Text)));\n}\n\nexport default Display;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    width: Dimensions.get('screen').width,\n    height: Dimensions.get('screen').height / 6\n  },\n  textinput: {\n    color: \"white\",\n    fontSize: Text.length > 15 ? 30 : 40,\n    width: Dimensions.get('screen').width\n  }\n});","map":{"version":3,"sources":["C:/Avishka/JAVA/React-Native-Test/my-calculator/Components/TextInput/Display.js"],"names":["React","Display","data","Text","textArray","newTextArray","length","includes","indexOf","floatIndex","slice","push","lastIndex","firstIndex","arrayIndex","concatString","console","log","Keyboard","dismiss","styles","container","color","width","Dimensions","get","fontSize","StyleSheet","create","flexDirection","height","textinput"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View,StyleSheet, TextInput,Dimensions,Keyboard,TouchableWithoutFeedback } from 'react-native';\r\n\r\nfunction Display({data}) {\r\nlet Text = data;\r\nlet textArray = [];\r\nlet newTextArray = [];\r\nif(Text.length>=4 && Text!='Out of range'){\r\n    if (Text.includes('.')){\r\n        if(Text.indexOf('.')>3){\r\n            const floatIndex = Text.indexOf('.');\r\n            Text = Text.slice(0,(floatIndex-3))+\",\"+Text.slice(floatIndex-3);\r\n        }\r\n    }else{\r\n        textArray.push(Text.slice(-3));\r\n        let lastIndex = Text.length - 3;\r\n        let firstIndex = lastIndex - 3;\r\n        while (true) {\r\n            \r\n            if (firstIndex <= 0) {\r\n                textArray.push(Text.slice(0, lastIndex));\r\n                break;\r\n            }\r\n            textArray.push(Text.slice(firstIndex, lastIndex));\r\n            lastIndex = firstIndex;\r\n            firstIndex = lastIndex - 3;\r\n}\r\n    }\r\n    //console.log(textArray);\r\n    let arrayIndex = textArray.length-1;\r\n    //console.log(\"Text Array--->\",textArray);\r\n    //let lastArrayIndex  = arrayIndex - textArray.length;\r\n    while (true) {\r\n        newTextArray.push(textArray[arrayIndex]);\r\n        if(arrayIndex==0){\r\n            break;\r\n        }\r\n        //newTextArray.push(',');\r\n        \r\n        arrayIndex-=1;   \r\n    }\r\n    //console.log(\"=========================================\");\r\n    //console.log(\"New Text Array--->\",newTextArray);\r\n    arrayIndex = 0;\r\n    Text='';\r\n    while (true) {\r\n        if(arrayIndex==newTextArray.length){\r\n            break;\r\n        }\r\n        let concatString = newTextArray[arrayIndex]+\",\";\r\n        Text+=concatString;\r\n        arrayIndex+=1;\r\n    }\r\n    Text = Text.slice(0,(Text.length-1));\r\n    //console.log(Text.length);\r\n    console.log(Text);\r\n    //console.log(\"=========================================\");\r\n    //console.log(Text);\r\n    //console.log(\"==================================\");\r\n}\r\n\r\n\r\n    return (\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n            <View style={styles.container}>\r\n                <TextInput \r\n                    textAlign=\"right\"\r\n                    style={{color:\"white\",\r\n                            width:Dimensions.get('screen').width,\r\n                            fontSize:Text.length>15?30:40,\r\n                            }}\r\n                    showSoftInputOnFocus={false}\r\n                    editable={false}\r\n                    \r\n                >{Text}</TextInput>\r\n\r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default Display;\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flexDirection:\"row\",\r\n        width:Dimensions.get('screen').width,\r\n        height:Dimensions.get('screen').height/6,\r\n       \r\n    },\r\n    textinput:{\r\n        color:\"white\",\r\n        fontSize:Text.length>15?30:40,\r\n        width:Dimensions.get('screen').width,\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}